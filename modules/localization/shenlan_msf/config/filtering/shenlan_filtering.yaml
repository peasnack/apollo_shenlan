# 全局地图
map_path: /apollo/modules/localization/shenlan_msf/slam_data/map/filtered_map.pcd
global_map_filter: voxel_filter # 选择滑窗地图点云滤波方法，目前支持：voxel_filter、no_filter

# 局部地图
# 局部地图从全局地图切割得到，此处box_filter_size是切割区间
# 参数顺序是min_x, max_x, min_y, max_y, min_z, max_z
box_filter_size: [-150.0, 150.0, -150.0, 150.0, -150.0, 150.0]
local_map_filter: voxel_filter # 选择滑窗地图点云滤波方法，目前支持：voxel_filter、no_filter

# 当前帧
# no_filter指不对点云滤波，在匹配中，理论上点云越稠密，精度越高，但是速度也越慢
# 所以提供这种不滤波的模式做为对比，以方便使用者去体会精度和效率随稠密度的变化关系
current_scan_filter: voxel_filter # 选择当前帧点云滤波方法，目前支持：voxel_filter、no_filter

# 匹配
registration_method: Point2Plane   # 选择点云匹配方法，目前支持：NDT

# select fusion method for IMU-GNSS-Odo-Mag, available methods are:
#     1. error_state_kalman_filter
fusion_method: error_state_kalman_filter
# select fusion strategy for IMU-GNSS-Odo-Mag, available methods are:
#     1. pose_velocity
#     2. pose
fusion_strategy: pose_velocity

# 各配置选项对应参数
## a. point cloud filtering:
voxel_filter:
    global_map:
        leaf_size: [0.9, 0.9, 0.9]
    local_map:
        leaf_size: [0.5, 0.5, 0.5]
    current_scan:
        leaf_size: [1.0, 1.0, 1.0]
        # leaf_size: [0.6, 0.6, 0.6]


## b. relocalization
relocalization:
    enable_relocalization: false # if false, using gnss data to initalization
     # beijing.bag
    # guess_pos: [0.0, 0.0, 0.0]
    # beijing.bag -s 200
    # guess_pos: [15, -33, 0.0]
    # 2wd_fws_loc_parking_start.bag
    # guess_pos: [-162, 9, -4.0]
    # 2wd_fws.bag
    guess_pos: [6, -29, -0.0]
    fitness_socre_threshold: 5.0 # 5.0
    # 重定位使用ndt配准的参数
    res : 2.5
    step_size : 0.1
    trans_eps : 0.01
    max_iter : 30

## c. frontend matching
NDT:
    res : 1.0
    step_size : 0.1
    trans_eps : 0.01
    max_iter : 30

ICP:
    max_corr_dist : 1.2
    trans_eps : 0.01
    euc_fitness_eps : 0.36
    max_iter : 30

Point2Plane:
    num_threads : 4
    max_corr_dis : 1.0
    max_iter : 30
    trans_eps : 0.01
    degeneracy_threshold: 10

## d. Kalman filter for IMU-lidar-GNSS fusion:
## d.1. Error-State Kalman filter for IMU-GNSS-Odo fusion:
error_state_kalman_filter:
    earth:
        # gravity can be calculated from https://www.sensorsone.com/local-gravity-calculator/ using latitude and height:
        gravity_magnitude: 9.80943
        # rotation speed, rad/s:
        rotation_speed: 7.292115e-5
        # latitude:
        latitude:   48.9827703173
    covariance:
        prior:
            pos: 1.0e-6
            vel: 1.0e-6
            ori: 1.0e-6
            epsilon: 1.0e-6 # 1.0-6
            delta: 1.0e-6
        process:
            gyro: 1.0e-1 # 1.0e-4
            accel: 2.5e-2 # 2.5e-3
            bias_accel: 2.5e-6 # 2.5e-3
            bias_gyro: 1.0e-6 # 1.0e-4
        measurement:
            pose:
                pos: 1.0e-4 # 1.0e-4
                ori: 1.0e-7 # 1.0e-4
            pos: 1.0e-4
            vel: 2.5e-6 # 2.5e-3
    motion_constraint:
        activated: true
        w_b_thresh: 0.13 # rad/s
